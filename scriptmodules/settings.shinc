#!/bin/bash
#
# RetroRig settings modules
# This is a small script to copy over configuration files for emulators
# append a "-x" on the end above for debugging if need be
# Please report any errors via a pull request
# You can also reach me on twitter: @N3RD42
#

function set_menu()
{
	
while true; do
    cmd=(dialog --backtitle "LibreGeek.org RetroRig" --menu "Settings Menu" 18 0 12)
    options=(1 "Change resolution"  
	     2 "Load ROMs"
	     3 "Change plugins/filters/scaling"
	     4 "Change Gamepad Type"
	     5 "Enable SSH support"
	     6 "Enable ROMs samba share"
	     7 "BIOS loader"
	     8 "BIOS checker"
	     9 "Backup existing configs"
	     10 "Restore first run configs"
	     11 "Update XBMC configs"
	     12 "Enable XBMC Session (Experimental Beta!)"
 	     13 "Back to main menu")

	#make menu choice
	choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	
	if [ "$choices" != "" ]; then
	    case $choices in

		1)  	
		set_resolution
		;;

		2)  	
		h_rom_loader
		;;

		3)
		dialog --msgbox "Option disabled for further testing" 5 40 
		sleep 2s 	
		;;

		4)  	
		rrs_gamepad
		;;

		5)
		set_enable_ssh
		;;

		6)
		set_enable_samba
		;;

		7)
		h_bios_loader
		;;

		8)
		h_bios_checker
		;;

		9)
		h_autosave_configs
		;;

		10)
		h_restore_configs
		;;

		11)
		rrs_xbmc_cfgs
		;;

		12)
		set_xbmc_session
		;;

		13)
		return
		;;

		esac
	else
		break
	fi
done
}

function set_enable_samba()
{
	clear
	
	# install samba services
	echo "####################################################"
	echo "Installing samba services"
	echo "####################################################"
	echo ""
	sleep 2s
	$cmd_install_pkg samba
	
	# append samba share parameters
	echo ""
	echo "####################################################"
	echo "Configuring samba services"
	echo "####################################################"
	echo ""
	sleep 2s
	cat "$rootdir/supplemental/samba_shares.txt" >> "/etc/samba/smb.conf"

	# replace parameters of share
	sed -i "s|path_temp|$rootdir/ROMs|g" "/etc/samba/smb.conf"
	
	echo ""
	echo "####################################################"
	echo "Restarting samba services "
	echo "####################################################"
	echo ""

	# Correct permissions on ROMs folder for guest access
	chmod 777 -Rv "$rootdir/ROMs"

	# restart services
	$cmd_samba_restart

	# inform user of quick tips and notes
	dialog --msgbox "The share 'RetroRig_ROMs' has now been added your acessible samba shares. You can access this a number of ways:\n\n1. 'smbclient //test-pc/retrorig_roms -U $user' on the CLI of a terminal window such as bash \n\n2. 'smb://test-pc/retrorig_roms/' from the file manager address bar (Nautilus) \n\n3. Through an alternative GUI client" 15 60

}

function set_enable_ssh()
{
	clear
	#install openssh-server  
	echo "####################################################"
	echo "Installing ssh services"
	echo "####################################################"
	echo ""
	$cmd_install_pkg openssh-server
	
	echo "####################################################"
	echo "Configuring samba services"
	echo "####################################################"
	echo ""
	#prompt user to change default port
	dialog --title "Set desired SSH port (typically 22)" --inputbox "Enter Port" 10 0 2> /tmp/set_ssh
	#cat input
	ssh_new=$(cat '/tmp/set_ssh')
	#set orig port 
	ssh_org=$(grep -i "Port " /etc/ssh/sshd_config)
	#set new port from user input
	sed -i "s|$ssh_org|Port $ssh_new|g" /etc/ssh/sshd_config
	#restart ssh service
	$cmd_ssh_restart
	#remove temp file
	rm -f /tmp/set_ssh
}

function set_xbmc_session()
{
	# Allow user to choose whether or not they want to boot directly to an
	# XBMC session, rather than boot Unity and load XBMC.
	
	# confirm with user first
	cfg_confirm

	echo "####################################################"
	echo "Configuring xbmc session"
	echo "####################################################"
	echo ""

	clear
	# copy config files
	cp -v "$rootdir/XBMC-cfgs/XBMC-session/xbmc.desktop" "/usr/share/xsessions"
	cp -v "$rootdir/XBMC-cfgs/XBMC-session/xbmc-session" "/usr/bin"
	# make executable
	chmod +x "/usr/bin/xbmc-session"
	chmod +x "/usr/share/xsessions/xbmc.desktop"
	# change default xsession
	session_org=$(grep "session" /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf)
	session_new="user-session=XBMC"

	# change the session
	# NOTE! As of Ubuntu Trusy 14.04, lightdm-set-defaults is no longer available. This is because 
	# lightdm now using a configuration directory /etc/lightdm/lightdm.conf.d/ rather than a 
	# single configuration file. The files in this directory can be edited by hand, new files 
	# can be added, or files can be removed. There is no longer any need for a command that 
	# edits the single configuration file.

	sed -i "s|$session_org|$session_new|g" "/usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf"
	sleep 2s

	# correct permissions
	h_correct_perms
}

function set_resolution() {

#menu
#add res-switcher function to make new presets more modular to add

while true; do
cmd=(dialog --backtitle "RetroRig Settings" --menu "Choose your resolution" 16 0 16)
options=(1 "Automatic Configuration"
	 2 "Current Resolution"
	 3 "1280x720  (720p)  (5:4)"
	 4 "1280x1024 (SXGA)  (5:4)"
	 5 "1360x768  (720p)  (16:9)"
	 6 "1600x900  (900p)  (16:9)"
	 7 "1920x1080 (1080p) (16:9)"
	 8 "Custom"
	 9 "Exit resolution selection")
	
# Expanding arrays involves [@] and {}
choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
if [ "$choices" != "" ]; then
    case $choices in

	1) 
		#enable auto resoltuion
		setParameter "auto resolution" "true"
		dialog --msgbox "Resolution settings for emulators will automatically be synchronized with XBMC's settings." 8 60
		break
		;;		

	2) 
		#Need to use extended regexp's here because of nes being within nes
		#grep -Ee '\bnes\b' [list of files]

		# inform user that emulators like MESS automatically adjust resolution
		dialog --msgbox "Please Note: emulators, such as MESS, will automatically adjust their resolution \
				and do not require or need resolution input." 8 60

		# echo current resolution
		# mupen64plus
		echo "mupen64plus:" > "$rootdir/logs/res.txt"
		grep -Ee "\bScreenWidth = \b" "$config_home/.config/mupen64plus/mupen64plus.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bScreenHeight = \b" "$config_home/.config/mupen64plus/mupen64plus.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# mednafen GBC
		echo "Mednafen (GBC)" >> "$rootdir/logs/res.txt"
		grep -Ee "\bgb.xres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bgb.yres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# mednafen GBA
		echo "Mednafen (GBA)" >> "$rootdir/logs/res.txt"
		grep -Ee "\bgba.xres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bgba.yres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# mednafen NES
		echo "Mednafen (NES)" >> "$rootdir/logs/res.txt"
		grep -Ee "\bnes.xres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bnes.yres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# mednafen Sega Sega Master System
		echo "Mednafen (Sega Master System)" >> "$rootdir/logs/res.txt"
		grep -Ee "\bsms.xres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bsms.yres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# mednafen Sega Game Gear
		echo "Mednafen (Sega Game Gear)" >> "$rootdir/logs/res.txt"
		grep -Ee "\bgg.xres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bgg.yres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# mednafen SNES
		echo "Mednafen (SNES)" >> "$rootdir/logs/res.txt"
		grep -Ee "\bsnes.xres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bsnes.yres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# mednafen Turbographx 16
		echo "Mednafen (Turbographx 16)" >> "$rootdir/logs/res.txt"
		grep -Ee "\bpce.xres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bpce.yres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# mednafen PSX
		echo "Mednafen (PSX)" >> "$rootdir/logs/res.txt"
		grep -Ee "\bpsx.xres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bpsx.yres\b" "$config_home/.mednafen/mednafen-09x.cfg" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# Stella
		echo "Stella" >> "$rootdir/logs/res.txt"
		grep -Ee "\bfullres = \b" "$config_home/.stella/stellarc" >> "$rootdir/logs/res.txt"
		echo "" >> "$rootdir/logs/res.txt"
		# PCSX2
		echo "PCSX2" >> "$rootdir/logs/res.txt"
		grep -Ee "\bresx = \b" "$config_home/pcsx2/inis/GSdx.ini" >> "$rootdir/logs/res.txt"
		grep -Ee "\bresy = \b" "$config_home/pcsx2/inis/GSdx.ini" >> "$rootdir/logs/res.txt"
		# Gens GS (Sega CD/32X)
		echo "Gens GS" >> "$rootdir/logs/res.txt"
		grep -Ee "\bOpenGL Width=\b" "$config_home/.gens/gens.cfg" >> "$rootdir/logs/res.txt"
		grep -Ee "\bOpenGL Height=\b" "$config_home/.gens/gens.cfg" >> "$rootdir/logs/res.txt"
	
		#report current resolution
		dialog --textbox "$rootdir/logs/res.txt" 33 0
		#remove text file
		rm "$rootdir/logs/res.txt"
                #disable auto resoltuion
		setParameter "auto resolution" "false"
		break
		;;

	3) 
		#setting chosen: "1280x720  (720p)  (5:4)"
		#set mupen64plus value
		m_new_X="1280"
		m_new_Y="720"
		#set mednafen (GBC) value
		gb_new_X="1280"
		gb_new_Y="720"
		#set mednafen (GBA) value
		gba_new_X="1280"
		gba_new_Y="1024"
		#set mednafen (NES) value
		nes_new_X="1280"
		nes_new_Y="720"
		#set mednafen (SNES) value
		snes_new_X="1280"
		snes_new_Y="720"
		#set mednafen (Sega Master System) value
		sms_new_X="1280"
		sms_new_Y="720"
		#set mednafen (Sega Game Gear) value
		gg_new_X="1280"
		gg_new_Y="720"
		#set mednafen (Turbographx 16) value
		pce_new_X="1280"
		pce_new_Y="720"
		#set mednafen (PSX) value
		psx_new_X="1280"
		psx_new_Y="720"
		#set pcsx2 (PS2) value
		ps2_new_X="1280"
		ps2_new_Y="720"
		# gens gs (CD/32X)
		gens_new_X="1280"
		gens_new_Y="720"
		#set stella (Atari 2600)
		st_new="1280x720"
		# set the resolution with helper
		h_res_switcher
		#disable auto resoltuion
		setParameter "auto resolution" "false"
		#return to menu
		break
		;;  
	4) 
		#setting chosen: "1280x1024 (SXGA)  (5:4)"
		#set mupen64plus value
		m_new_X="1280"
		m_new_Y="1024"
		#set mednafen (GBC) value
		gb_new_X="1280"
		gb_new_Y="1024"
		#set mednafen (GBA) value
		gba_new_X="1280"
		gba_new_Y="1024"
		#set mednafen (NES) value
		nes_new_X="1280"
		nes_new_Y="1024"
		#set mednafen (SNES) value
		snes_new_X="1280"
		snes_new_Y="1024"
		#set mednafen (Sega Master System) value
		sms_new_X="1280"
		sms_new_Y="1024"
		#set mednafen (Sega Game Gear) value
		gg_new_X="1280"
		gg_new_Y="1024"
		#set mednafen (Turbographx 16) value
		pce_new_X="1280"
		pce_new_Y="1024"
		#set mednafen (PSX) value
		psx_new_X="1280"
		psx_new_Y="1024"
		#set pcsx2 (PS2) value
		ps2_new_X="1280"
		ps2_new_Y="1024"
		# gens gs (CD/32X)
		gens_new_X="1280"
		gens_new_Y="1024"
		#set stella (Atari 2600)
		st_new="1280x1024"
		# set the resolution with helper
		h_res_switcher
                #disable auto resoltuion
		setParameter "auto resolution" "false"
		#return to menu
		break
		;;
	5) 
		#setting chosen: "1366x768  (720p)  (16:9)"
		#set mupen64plus value
		m_new_X="1360"
		m_new_Y="768"
		#set mednafen (GBC) value
		gb_new_X="1360"
		gb_new_Y="768"
		#set mednafen (GBA) value
		gba_new_X="1360"
		gba_new_Y="768"
		#set mednafen (NES) value
		nes_new_X="1360"
		nes_new_Y="768"
		#set mednafen (SNES) value
		snes_new_X="1360"
		snes_new_Y="768"
		#set mednafen (Sega Master System) value
		sms_new_X="1360"
		sms_new_Y="768"
		#set mednafen (Sega Game Gear) value
		gg_new_X="1360"
		gg_new_Y="768"
		#set mednafen (Turbographx 16) value
		pce_new_X="1360"
		pce_new_Y="768"
		#set mednafen (PSX) value
		psx_new_X="1360"
		psx_new_Y="768"
		#set pcsx2 (PS2) value
		ps2_new_X="1360"
		ps2_new_Y="768"
		# gens gs (CD/32X)
		gens_new_X="1360"
		gens_new_Y="768"
		#set stella (Atari 2600)
		st_new="1360x768"
		# set the resolution with helper
		h_res_switcher
                #disable auto resoltuion
		setParameter "auto resolution" "false"
		#return to menu
		break
		;;
	6) 
		#setting chosen: "1600x900  (900p)  (16:9)"
		#set mupen64plus value
		m_new_X="1600"
		m_new_Y="900"
		# set mednafen (GBC) value
		gb_new_X="1600"
		gb_new_Y="900"
		# set mednafen (GBA) value
		gba_new_X="1600"
		gba_new_Y="900"
		# set mednafen (NES) value
		nes_new_X="1600"
		nes_new_Y="900"
		# set mednafen (SNES) value
		snes_new_X="1600"
		snes_new_Y="900"
		# set mednafen (Sega Master System) value
		sms_new_X="1600"
		sms_new_Y="900"
		# set mednafen (Sega Game Gear) value
		gg_new_X="1600"
		gg_new_Y="900"
		# set mednafen (Turbographx 16) value
		pce_new_X="1600"
		pce_new_Y="900"
		# set mednafen (PSX) value
		psx_new_X="1600"
		psx_new_Y="900"
		# set pcsx2 (PS2) value
		ps2_new_X="1600"
		ps2_new_Y="900"
		# gens gs (CD/32X)
		gens_new_X="1600"
		gens_new_Y="900"
		#set stella (Atari 2600)
		st_new="1600x900"
		# set the resolution with helper
                #disable auto resoltuion
		setParameter "auto resolution" "false"
		h_res_switcher
		#return to menu
		break
		;;
	7) 
		# setting chosen: "1920x1080 (1080p) (16:9)"
		# set mupen64plus value
		m_new_X="1920"
		m_new_Y="1080"
		# set mednafen (GBC) value
		gb_new_X="1920"
		gb_new_Y="1080"
		# set mednafen (GBA) value
		gba_new_X="1920"
		gba_new_Y="1080"
		# set mednafen (NES) value
		nes_new_X="1920"
		nes_new_Y="1080"
		# set mednafen (SNES) value
		snes_new_X="1920"
		snes_new_Y="1080"
		# set mednafen (Sega Master System) value
		sms_new_X="1920"
		sms_new_Y="1080"
		# set mednafen (Sega Game Gear) value
		gg_new_X="1920"
		gg_new_Y="1080"
		# set mednafen (Turbographx 16) value
		pce_new_X="1920"
		pce_new_Y="1080"
		# set mednafen (PSX) value
		psx_new_X="1920"
		psx_new_Y="1080"
		# set pcsx2 (PS2) value
		ps2_new_X="1920"
		ps2_new_Y="1080"
		# gens gs (CD/32X)
		gens_new_X="1920"
		gens_new_Y="1080"
		# set stella (Atari 2600)
		st_new="1920x1080"
		# set the resolution with helper
		h_res_switcher
                #disable auto resoltuion
		setParameter "auto resolution" "false"
		#return to menu
		break
		;;    
	8) 
		dialog --infobox  "Setting resolution from user input" 3 40
		# set new resolution(s) from user input
		dialog --title "Set Custom Resolution" --inputbox "Enter Width (X)" 10 4 2> /tmp/new_X
		dialog --title "Set Custom Resolution" --inputbox "Enter Length (Y)" 10 4 2> /tmp/new_Y

		# set new resolution(s) from configs
		# mupen64plus
		m_new_X=$(cat '/tmp/new_X')
		m_new_Y=$(cat '/tmp/new_Y')
		# mednafen (GBC)
		gb_new_X=$(cat '/tmp/new_X')
		gb_new_Y=$(cat '/tmp/new_Y')
		# mednafen (GBA)
		gba_new_X=$(cat '/tmp/new_X')
		gba_new_Y=$(cat '/tmp/new_Y')
		# mednafen (NES)
		nes_new_X=$(cat '/tmp/new_X')
		nes_new_Y=$(cat '/tmp/new_Y')
		# mednafen (SNES)
		snes_new_X=$(cat '/tmp/new_X')
		snes_new_Y=$(cat '/tmp/new_Y')
		# mednafen (Sega Master System)
		sms_new_X=$(cat '/tmp/new_X')
		sms_new_Y=$(cat '/tmp/new_Y')
		# mednafen (Sega Game Gear)
		gg_new_X=$(cat '/tmp/new_X')
		gg_new_Y=$(cat '/tmp/new_Y')
		# mednafen (Turbographx 16)
		pce_new_X=$(cat '/tmp/new_X')
		pce_new_Y=$(cat '/tmp/new_Y')
		# mednafen (PSX)
		psx_new_X=$(cat '/tmp/new_X')
		psx_new_Y=$(cat '/tmp/new_Y')
		# pcsx (PS2)
		ps2_new_X=$(cat '/tmp/new_X')
		ps2_new_Y=$(cat '/tmp/new_Y')
		# gens gs (CD/32X)
		gens_new_X=$(cat '/tmp/new_X')
		gens_new_Y=$(cat '/tmp/new_Y')
		# set stella (Atari 2600)
		st1=$(cat '/tmp/new_X')
		stdelim=$('x')
		st2=$(cat '/tmp/new_Y')
		st_new=$("$st1""$stdelim""$st2")
		# set the resolution with helper
		h_res_switcher

		#remove temp files
		rm -f /tmp/new_X
		rm -f /tmp/new_Y
                #disable auto resoltuion
		setParameter "auto resolution" "false"
		#return to menu
		break
		;; 
	9) 
		break
		;;

	255)
		# Next two lines for debugging only	
		# dialog --infobox "Esc hit..." 3 14
		# sleep 1s
		break
	;;

	esac
else
		# Next two lines for debugging only	
		# dialog --infobox "cancel hit" 3 14
		# sleep 1s
		break
fi
done

	if [ ! -f "$home/.config/monitors.xml" ]; then
		dialog --msgbox "Heads up for dual monitor users! You need to configure your displays via \"Desktop Settings -> Display Settings\" to get dual monitor support working. ($home/.config/monitors.xml not found) " 8 60
	fi

}


function set_config_mupen()
{

#set fstart to start at specified folder directory, local var only
local fstart

cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" --menu "Default directory: ~/.config/mupen64plus" 16 0 16)
options=(1 "Change Video Plugin"
	 2 "Back to settings menu")  

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		#present a different file loader here, since we want to start in a diff DIR.
		fstart=/usr/lib/x86_64-linux-gnu/mupen64plus
		#Maybe I can find a way to swap the dir on the fly later on
		folder=$(dialog --stdout --title "Please choose a file (spacebar to select)" --fselect $fstart/ 10 68)
		#change plugin
		m_plug_orig=$(grep -i "VideoPlugin = " "$config_home/.config/mupen64plus/mupen64plus.cfg")
		sed -i "s|$m_plug_orig|VideoPlugin = $folder|g" "$config_home/.config/mupen64plus/mupen64plus.cfg"
		;;

		2)
		return 	 	
		;;

	esac
	done

	# correct permissions
	h_correct_perms
}


